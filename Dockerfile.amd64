# Use NVIDIA's CUDA-enabled Ubuntu 22.04 base image for AMD64
FROM nvidia/cuda:11.8.0-runtime-ubuntu22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV CAMERA_TYPE=usb  

# Install basic dependencies, including git
RUN apt-get update && apt-get install -y \
    python3-pip \
    python3-dev \
    cmake \
    libusb-1.0-0-dev \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libgtk-3-0 \
    libopencv-dev \
    python3-opencv \
    gstreamer1.0-tools \
    gstreamer1.0-plugins-good \
    gstreamer1.0-plugins-bad \
    gstreamer1.0-plugins-ugly \
    gstreamer1.0-libav \
    libgstreamer1.0-dev \
    libgstreamer-plugins-base1.0-dev \
    v4l-utils \
    wget \
    git \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Update library cache
RUN ldconfig

# Upgrade pip and install Python dependencies
RUN pip3 install --upgrade pip
RUN pip3 install \
    roboflow \
    requests \
    numpy \
    pyrealsense2 \
    flask \
    ultralytics \
    websocket-server

# Pre-download YOLOE weights and dependencies
RUN pip3 install \
    huggingface-hub \
    safetensors \
    open-clip-torch \
    timm 
# Set working directory
WORKDIR /app
RUN python3 -c "from ultralytics import YOLOE; model = YOLOE('yoloe-11l-seg.pt')"

# Copy inference scripts and HTML template
COPY utils.py /app/utils.py
COPY inference_usb.py /app/inference_usb.py
COPY templates/index.html /app/templates/index.html
COPY static /app/static

# Expose ports: 5000 for Flask web server, 5001 for WebSocket, 12345 for TCP server
EXPOSE 5000 5001 12345

# Command to run the appropriate inference script based on CAMERA_TYPE
CMD ["sh", "-c", "python3 inference_usb.py"]